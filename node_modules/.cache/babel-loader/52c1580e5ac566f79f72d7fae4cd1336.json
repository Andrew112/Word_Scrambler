{"ast":null,"code":"export const randomize = sentence => {\n  return sentence.split(' ').map(word => {\n    if (word.length < 4) {\n      return word;\n    } else {\n      let newWord = '';\n      let indexList = [];\n\n      while (newWord.length < word.length - 2) {\n        let index = Math.floor(Math.random() * (word.length - 2)) + 1;\n\n        if (index === 0 || index === word.length - 1) {\n          continue;\n        } else {\n          if (!indexList.includes(index)) {\n            indexList.push(index);\n            newWord += word[index];\n          } else {\n            continue;\n          }\n        }\n      }\n\n      return word[0] + newWord + word[word.length - 1];\n    }\n  }).join(' ');\n};","map":{"version":3,"sources":["C:/Users/andre/prjtcs/word_scrambler_ac/src/helper/randomize_.js"],"names":["randomize","sentence","split","map","word","length","newWord","indexList","index","Math","floor","random","includes","push","join"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,QAAD,IAAc;AACnC,SAAOA,QAAQ,CAACC,KAAT,CAAe,GAAf,EAAoBC,GAApB,CAAyBC,IAAD,IAAU;AACrC,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACjB,aAAOD,IAAP;AACH,KAFD,MAEO;AACH,UAAIE,OAAO,GAAG,EAAd;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,aAAOD,OAAO,CAACD,MAAR,GAAiBD,IAAI,CAACC,MAAL,GAAc,CAAtC,EAAyC;AACrC,YAAIG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,IAAI,CAACC,MAAL,GAAc,CAA/B,CAAX,IAAgD,CAA5D;;AACA,YAAIG,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAKJ,IAAI,CAACC,MAAL,GAAc,CAA3C,EAA8C;AAC1C;AACH,SAFD,MAEO;AACH,cAAI,CAACE,SAAS,CAACK,QAAV,CAAmBJ,KAAnB,CAAL,EAAgC;AAC5BD,YAAAA,SAAS,CAACM,IAAV,CAAeL,KAAf;AACAF,YAAAA,OAAO,IAAIF,IAAI,CAACI,KAAD,CAAf;AACH,WAHD,MAGO;AACH;AAEH;AACJ;AACJ;;AACD,aAAOJ,IAAI,CAAC,CAAD,CAAJ,GAAUE,OAAV,GAAoBF,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAA/B;AACH;AACJ,GAtBM,EAsBJS,IAtBI,CAsBC,GAtBD,CAAP;AAuBH,CAxBM","sourcesContent":["export const randomize = (sentence) => {\r\n    return sentence.split(' ').map((word) => {\r\n        if (word.length < 4) {\r\n            return word;\r\n        } else {\r\n            let newWord = '';\r\n            let indexList = [];\r\n            while (newWord.length < word.length - 2) {\r\n                let index = Math.floor(Math.random() * (word.length - 2)) + 1;\r\n                if (index === 0 || index === word.length - 1) {\r\n                    continue;\r\n                } else {\r\n                    if (!indexList.includes(index)) {\r\n                        indexList.push(index);\r\n                        newWord += word[index];\r\n                    } else {\r\n                        continue;\r\n                       \r\n                    }\r\n                }\r\n            }\r\n            return word[0] + newWord + word[word.length - 1]\r\n        }\r\n    }).join(' ');\r\n}"]},"metadata":{},"sourceType":"module"}