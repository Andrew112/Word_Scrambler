{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\prjtcs\\\\word_scrambler_ac\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/Home.css';\nimport React, { useContext } from 'react';\nimport Block from '../components/Block';\nimport { WordContext } from '../context/WordContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    scrambledPhrase,\n    correctAns,\n    counter,\n    setCounter\n  } = useContext(WordContext);\n  let count = 0;\n\n  const handleClick = () => {\n    setCounter(counter + 1);\n    count = 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"scrambled-word\",\n      children: scrambledPhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: \"Guess the sentence! Start typing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: \"The yellow blocks are meant for spaces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), scrambledPhrase.split(' ').map((word, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blocks-container\",\n      children: (j < scrambledPhrase.split(' ').length - 1 ? [...word.split(''), ' '] : [...word.split('')]).map((l, i) => /*#__PURE__*/_jsxDEV(Block, {\n        color: l === ' ' ? 'orange' : '#e1e1e1',\n        dataKey: count++\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: correctAns === scrambledPhrase.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"vOMorZTBgX2R+xlfw2evajX03Hk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/andre/prjtcs/word_scrambler_ac/src/pages/Home.js"],"names":["React","useContext","Block","WordContext","Home","scrambledPhrase","correctAns","counter","setCounter","count","handleClick","split","map","word","j","length","l","i"],"mappings":";;;AAAA,OAAO,oBAAP;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA;AAAxC,MAAuDP,UAAU,CAACE,WAAD,CAAvE;AACA,MAAIM,KAAK,GAAG,CAAZ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAE,IAAAA,KAAK,GAAG,CAAR;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBAAgCJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMKA,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+B,CAACC,IAAD,EAAOC,CAAP,kBAC5B;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACK,CAACA,CAAC,GAAGT,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2BI,MAA3B,GAAoC,CAAxC,GAA4C,CAAC,GAAGF,IAAI,CAACF,KAAL,CAAW,EAAX,CAAJ,EAAoB,GAApB,CAA5C,GAAuE,CAAC,GAAGE,IAAI,CAACF,KAAL,CAAW,EAAX,CAAJ,CAAxE,EAA6FC,GAA7F,CAAiG,CAACI,CAAD,EAAIC,CAAJ,kBAC9F,QAAC,KAAD;AAAe,QAAA,KAAK,EAAED,CAAC,KAAK,GAAN,GAAY,QAAZ,GAAuB,SAA7C;AAAwD,QAAA,OAAO,EAAEP,KAAK;AAAtE,SAAYQ,CAAZ;AAAA;AAAA;AAAA;AAAA,cADH;AADL,OAAuCH,CAAvC;AAAA;AAAA;AAAA;AAAA,YADH,CANL,eAeI;AAAA,gBACKR,UAAU,KAAKD,eAAe,CAACU,MAA/B,iBAAyC;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEL,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD9C;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA9BD;;GAAMN,I;;KAAAA,I;AAgCN,eAAeA,IAAf","sourcesContent":["import '../styles/Home.css';\r\n\r\nimport React, { useContext } from 'react';\r\n\r\nimport Block from '../components/Block';\r\nimport { WordContext } from '../context/WordContext';\r\n\r\nconst Home = () => {\r\n\r\n    const { scrambledPhrase, correctAns, counter, setCounter } = useContext(WordContext)\r\n    let count = 0;\r\n\r\n    const handleClick = () => {\r\n        setCounter(counter + 1);\r\n        count = 0;\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='scrambled-word'>{scrambledPhrase}</h1>\r\n            <p className='text'>Guess the sentence! Start typing</p>\r\n            <p className='text'>The yellow blocks are meant for spaces</p>\r\n            <p className='score'>Score: </p>\r\n\r\n            {scrambledPhrase.split(' ').map((word, j) => (\r\n                <div className='blocks-container' key={j}>\r\n                    {(j < scrambledPhrase.split(' ').length - 1 ? [...word.split(''), ' '] : [...word.split('')]).map((l, i) => (\r\n                        <Block key={i} color={l === ' ' ? 'orange' : '#e1e1e1'} dataKey={count++} />\r\n                    ))}\r\n                </div>\r\n\r\n            ))}\r\n\r\n            <div>\r\n                {correctAns === scrambledPhrase.length && <button className='btn' onClick={handleClick}>Next</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}