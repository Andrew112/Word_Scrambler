{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\prjtcs\\\\word_scrambler_ac\\\\src\\\\context\\\\WordContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { API_URL } from '../api.js';\nimport axios from 'axios'; //import { randomize } from '../helper/randomize_.js';\n//this sends word context across the application.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordContext = /*#__PURE__*/createContext(); //this function gloabalizes the app.\"\"\n//destructuring for the use of props.({children})\"\"\n\nexport const WordContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [phrase, setPhrase] = useState('');\n  const [scrambledPhrase, setScrambledPhrase] = useState('');\n  const [counter, setCounter] = useState(1);\n  const [correctAns, setCorrectAns] = useState(0);\n  useEffect(() => {\n    const loadPhrase = async () => {\n      const {\n        data\n      } = await axios.get(`${API_URL}/${counter}`);\n      const sentence = data.data.sentence;\n      setPhrase(sentence);\n      setCorrectAns(0);\n      console.log(sentence);\n    };\n\n    loadPhrase();\n  }, [counter]); //this wordcontext wraps all of our dependents from other classes.\n\n  return /*#__PURE__*/_jsxDEV(WordContext.Provider, {\n    value: {\n      phrase,\n      setPhrase,\n      scrambledPhrase,\n      setScrambledPhrase,\n      counter,\n      setCounter,\n      correctAns,\n      setCorrectAns\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WordContextProvider, \"Lc4084EodIFZsHFI1NoZlQ1Bg1w=\");\n\n_c = WordContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordContextProvider\");","map":{"version":3,"sources":["C:/Users/andre/prjtcs/word_scrambler_ac/src/context/WordContext.js"],"names":["React","createContext","useEffect","useState","API_URL","axios","WordContext","WordContextProvider","children","phrase","setPhrase","scrambledPhrase","setScrambledPhrase","counter","setCounter","correctAns","setCorrectAns","loadPhrase","data","get","sentence","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC,C,CAGP;AACA;;AACA,OAAO,MAAMM,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,CAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,UAAU,GAAG,YAAY;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEf,OAAQ,IAAGS,OAAQ,EAAhC,CAAvB;AACA,YAAMO,QAAQ,GAAGF,IAAI,CAACA,IAAL,CAAUE,QAA3B;AACAV,MAAAA,SAAS,CAACU,QAAD,CAAT;AACAJ,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAND;;AAOAH,IAAAA,UAAU;AACb,GATQ,EASN,CAACJ,OAAD,CATM,CAAT,CANiD,CAiBjD;;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA,eAArB;AAAsCC,MAAAA,kBAAtC;AAA0DC,MAAAA,OAA1D;AAAmEC,MAAAA,UAAnE;AAA+EC,MAAAA,UAA/E;AAA2FC,MAAAA;AAA3F,KAA7B;AAAA,cACKR;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nimport { API_URL } from '../api.js'\r\nimport axios from 'axios';\r\n\r\n//import { randomize } from '../helper/randomize_.js';\r\n\r\n//this sends word context across the application.\r\nexport const WordContext = createContext();\r\n\r\n\r\n//this function gloabalizes the app.\"\"\r\n//destructuring for the use of props.({children})\"\"\r\nexport const WordContextProvider = ({ children }) => {\r\n    const [phrase, setPhrase] = useState('');\r\n    const [scrambledPhrase, setScrambledPhrase] = useState('');\r\n    const [counter, setCounter] = useState(1);\r\n    const [correctAns, setCorrectAns] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const loadPhrase = async () => {\r\n            const { data } = await axios.get(`${API_URL}/${counter}`);\r\n            const sentence = data.data.sentence;\r\n            setPhrase(sentence)\r\n            setCorrectAns(0);\r\n            console.log(sentence)\r\n        }\r\n        loadPhrase();\r\n    }, [counter])\r\n\r\n    //this wordcontext wraps all of our dependents from other classes.\r\n    return (\r\n        <WordContext.Provider value={{ phrase, setPhrase, scrambledPhrase, setScrambledPhrase, counter, setCounter, correctAns, setCorrectAns }}>\r\n            {children}\r\n        </WordContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}