{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\prjtcs\\\\word_scrambler_ac\\\\src\\\\components\\\\Block.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/Block.css';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { WordContext } from '../context/WordContext'; //Block is a reference to the Input feilds.\n//import wordcontext to use its \"Globalization\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Block = _ref => {\n  _s();\n\n  let {\n    color,\n    dataKey\n  } = _ref;\n  const {\n    phrase,\n    correctAns,\n    setCorrectAns,\n    counter\n  } = useContext(WordContext);\n  const [index, setIndex] = useState(0);\n  const [text, setText] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState(color);\n  console.log(index);\n  useEffect(() => {\n    if (text === phrase.split('')[index].toLowerCase()) {\n      setCorrectAns(correctAns + 1);\n      setBackgroundColor('green');\n    } else {\n      setBackgroundColor(color);\n    }\n  }, [text]);\n  useEffect(() => {\n    setText('');\n    setIndex(0);\n    setBackgroundColor(color);\n  }, [counter]);\n\n  const handleChange = e => {\n    setIndex(dataKey);\n    setText(e.target.value);\n    console.log(value);\n  }; // console.log(phrase.split('')[index].toLowerCase());\n  // console.log(text);\n\n\n  console.log(correctAns);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"block\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      className: \"block-input\",\n      maxLength: \"1\",\n      onChange: handleChange,\n      style: {\n        backgroundColor: `${backgroundColor}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Block, \"ZHpBiwcI/hWOR8jlcpfCtrovycA=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["C:/Users/andre/prjtcs/word_scrambler_ac/src/components/Block.js"],"names":["React","useContext","useEffect","useState","WordContext","Block","color","dataKey","phrase","correctAns","setCorrectAns","counter","index","setIndex","text","setText","backgroundColor","setBackgroundColor","console","log","split","toLowerCase","handleChange","e","target","value"],"mappings":";;;AAAA,OAAO,qBAAP;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,SAASC,WAAT,QAA4B,wBAA5B,C,CAEA;AACA;;;;AACA,MAAMC,KAAK,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAuB;AAClC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,aAAtB;AAAqCC,IAAAA;AAArC,MAAiDV,UAAU,CAACG,WAAD,CAAjE;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAACG,KAAD,CAAtD;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,IAAI,KAAKN,MAAM,CAACY,KAAP,CAAa,EAAb,EAAiBR,KAAjB,EAAwBS,WAAxB,EAAb,EAAoD;AAChDX,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACAQ,MAAAA,kBAAkB,CAAC,OAAD,CAAlB;AACH,KAHD,MAGO;AACHA,MAAAA,kBAAkB,CAACX,KAAD,CAAlB;AACH;AAEJ,GARQ,EAQN,CAACQ,IAAD,CARM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAI,IAAAA,kBAAkB,CAACX,KAAD,CAAlB;AACH,GAJQ,EAIN,CAACK,OAAD,CAJM,CAAT;;AAMA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AACxBV,IAAAA,QAAQ,CAACN,OAAD,CAAR;AACAQ,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,GAJD,CAvBkC,CA4BlC;AACA;;;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACA,sBACI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEK,IAA1B;AAAgC,MAAA,SAAS,EAAC,aAA1C;AAAwD,MAAA,SAAS,EAAC,GAAlE;AAAsE,MAAA,QAAQ,EAAEQ,YAAhF;AACI,MAAA,KAAK,EAAE;AAAEN,QAAAA,eAAe,EAAG,GAAEA,eAAgB;AAAtC;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArCD;;GAAMX,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import '../styles/Block.css';\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { WordContext } from '../context/WordContext';\r\n\r\n//Block is a reference to the Input feilds.\r\n//import wordcontext to use its \"Globalization\"\r\nconst Block = ({ color, dataKey }) => {\r\n    const { phrase, correctAns, setCorrectAns, counter } = useContext(WordContext);\r\n    const [index, setIndex] = useState(0);\r\n    const [text, setText] = useState('');\r\n    const [backgroundColor, setBackgroundColor] = useState(color);\r\n    console.log(index);\r\n\r\n    useEffect(() => {\r\n        if (text === phrase.split('')[index].toLowerCase()) {\r\n            setCorrectAns(correctAns + 1);\r\n            setBackgroundColor('green')\r\n        } else {\r\n            setBackgroundColor(color)\r\n        }\r\n\r\n    }, [text])\r\n\r\n    useEffect(() => {\r\n        setText('');\r\n        setIndex(0);\r\n        setBackgroundColor(color);\r\n    }, [counter])\r\n\r\n    const handleChange = (e) => {\r\n        setIndex(dataKey);\r\n        setText(e.target.value);\r\n        console.log(value);\r\n    }\r\n    // console.log(phrase.split('')[index].toLowerCase());\r\n    // console.log(text);\r\n    console.log(correctAns);\r\n    return (\r\n        <span className='block'>\r\n            <input type=\"text\" value={text} className='block-input' maxLength='1' onChange={handleChange}\r\n                style={{ backgroundColor: `${backgroundColor}` }} />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Block;"]},"metadata":{},"sourceType":"module"}